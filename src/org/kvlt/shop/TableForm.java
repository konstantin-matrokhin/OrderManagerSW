package org.kvlt.shop;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class TableForm extends JFrame {

    private static final int W = 1024;
    private static final int H = 600;
    private static final String TITLE = "Таблица клиентов — " + OMSettings.$().getProperty("name");

    private JButton btnSearch;
    private JTextField fieldSearch;
    private JLabel labelSearch;
    private JTable clientTable;
    private JButton btnAdd;
    private JPanel tablePane;
    private JButton btnRemove;
    private JButton btnEdit;

    public TableForm() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }

        setContentPane(tablePane);
        Dimension paneDim = new Dimension(W, H);
        registerListeners();
        setSize(paneDim);
        setPreferredSize(paneDim);
        setLocationRelativeTo(null);
        setVisible(true);
        setTitle(TITLE);
        setMinimumSize(new Dimension(1024, 600));
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    }

    private void registerListeners() {
        btnAdd.addActionListener(e -> {
            AdditionForm dialog = new AdditionForm();
            dialog.pack();
            dialog.setVisible(true);
        });
        btnRemove.addActionListener(e -> {
            int currentRow = getTable().getSelectedRow();
            Log.$(currentRow);
            if (currentRow == -1) return;

            int result = JOptionPane.showConfirmDialog(null,
                    "Вы действительно хотите удалить этого клиента из таблицы?");
            if (result == JOptionPane.YES_OPTION) {
                int removeID = Integer.parseInt(getTable().getValueAt(currentRow, 0).toString());
                OrderManager.getDB().query("DELETE FROM clients WHERE id=" + removeID);
                OrderManager.getTableLoader().loadDB();
            }
        });
    }

    public JTable getTable() {
        return clientTable;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        tablePane = new JPanel();
        tablePane.setLayout(new GridLayoutManager(3, 2, new Insets(5, 10, 5, 10), -1, -1));
        tablePane.setInheritsPopupMenu(false);
        tablePane.setMinimumSize(new Dimension(1024, 600));
        tablePane.setName("Таблица");
        tablePane.setPreferredSize(new Dimension(1024, 600));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        tablePane.add(panel1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        btnSearch = new JButton();
        btnSearch.setText("Найти");
        panel1.add(btnSearch, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fieldSearch = new JTextField();
        fieldSearch.setText("");
        fieldSearch.setToolTipText("Введите данные для поиска");
        panel1.add(fieldSearch, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        labelSearch = new JLabel();
        labelSearch.setText("Поиск клиента");
        panel1.add(labelSearch, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 5, new Insets(0, 0, 0, 0), -1, -1));
        tablePane.add(panel2, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        btnAdd = new JButton();
        btnAdd.setText("[+]");
        panel2.add(btnAdd, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        btnRemove = new JButton();
        btnRemove.setText("[-]");
        panel2.add(btnRemove, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnEdit = new JButton();
        btnEdit.setText("Редактировать");
        panel2.add(btnEdit, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JButton button1 = new JButton();
        button1.setText("Button");
        panel2.add(button1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        tablePane.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        clientTable = new JTable();
        clientTable.setAutoResizeMode(4);
        clientTable.setFillsViewportHeight(true);
        clientTable.setRequestFocusEnabled(false);
        clientTable.setRowSelectionAllowed(true);
        clientTable.setToolTipText("1");
        scrollPane1.setViewportView(clientTable);
        labelSearch.setLabelFor(fieldSearch);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return tablePane;
    }
}
